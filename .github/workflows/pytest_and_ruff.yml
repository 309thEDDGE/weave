# This workflow will install Python dependencies, and run tests.

name: Weave CI/CD

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main"]

permissions:
  contents: read

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install minio
      run: |
        wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20230518000536.0.0_amd64.deb -O minio.deb
        sudo dpkg -i minio.deb
    - name: Launch minio
      continue-on-error: true
      run: |
        mkdir ~/minio
        minio server ~/minio --console-address :9090 &!
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: 6.0.5
        mongodb-username: testusername
        mongodb-password: testpassword
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install .
    - name: Test with pytest
      run: |
        export MONGODB_HOST=localhost
        export MONGODB_USERNAME=testusername
        export MONGODB_PASSWORD=testpassword
        export AWS_ACCESS_KEY_ID=minioadmin
        export AWS_SECRET_ACCESS_KEY=minioadmin
        export S3_ENDPOINT=http://172.17.0.1:9000/
        pytest -vv weave/tests/

  ruff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: chartboost/ruff-action@v1
  
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install pylint
      run: python3.10 -m pip install pylint
    - name: Install Weave and Dependencies
      run: |
        python3.10 -m pip install .
        python3.10 -m pip install pytest
    # If you do not install Weave's dependencies then it will fail PyLint due to import-errors
    - name: Run pylint
      run: pylint weave weave/tests
  version_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with: 
        ref: 'main'
    - name: Main Version
      id: main_version
      run: echo "MAIN_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
      # run: echo "::set-output name=MAIN_VERSION::$(python setup.py --version)"
    - uses: actions/checkout@v3
    - name: Merge Version
      id: merge_version
      run: echo "MERGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
      # run: echo "::set-output name=MERGE_VERSION::$(python setup.py --version)"
    - name: A/B Check
      if: ${{ env.MERGE_VERSION == env.MAIN_VERSION }}
      run:
        echo "::error Version unchanged from main=${MAIN_VERSION}"
        exit 1
      # - name: Compare Versions
      #   run:
      #     echo ${MAIN_VERSION}
      #     echo ${MERGE_VERSION}


      #    run: |
      #      VERSION_CODE="v""$(poetry version -s)"
      #      VERSION_TAG=$(git describe --exact-match --tags $(git log -n1 --pretty='%h')
      #      echo "::set-output name=VERSION_CODE::$VERSION_CODE"
      #      echo "::set-output name=VERSION_TAG::$VERSION_TAG"

      #  - name: version is correct
      #    if: ${{ steps.version_info.outputs.VERSION_CODE == steps.version_info.outputs.VERSION_TAG }}
      #    run: echo "version tag is alined"

      #  ... make a release