# This workflow will install Python dependencies, and run tests.

name: Weave CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  pytest:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          # Documentation for mssql container vars.
          # https://hub.docker.com/_/microsoft-mssql-server
          # Set the default System Administrator password (required)
          MSSQL_SA_PASSWORD: Testpassword1
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install minio
      run: |
        wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20230518000536.0.0_amd64.deb -O minio.deb
        sudo dpkg -i minio.deb
    - name: Launch minio
      continue-on-error: true
      run: |
        mkdir ~/minio
        minio server ~/minio --console-address :9090 &!
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: 6.0.5
        mongodb-username: testusername
        mongodb-password: testpassword
    - name: Install ODBC Driver for SQL Server
      run: |
        if ! [[ "18.04 20.04 22.04 23.04" == *"$(lsb_release -rs)"* ]];
        then
            echo "Ubuntu $(lsb_release -rs) is not currently supported.";
            exit;
        fi
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
        curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
        # optional: for bcp and sqlcmd
        sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
        echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
        source ~/.bashrc
        # optional: for unixODBC development headers
        sudo apt-get install -y unixodbc-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install .[extras]
    - name: Test with pytest
      # MSSQL_USERNAME is set to default System Administrator name ('sa')
      run: |
        export MSSQL_HOST=localhost
        export MSSQL_USERNAME=sa
        export MSSQL_PASSWORD=Testpassword1
        export MONGODB_HOST=localhost
        export MONGODB_USERNAME=testusername
        export MONGODB_PASSWORD=testpassword
        export AWS_ACCESS_KEY_ID=minioadmin
        export AWS_SECRET_ACCESS_KEY=minioadmin
        export S3_ENDPOINT=http://172.17.0.1:9000/
        pytest -vv weave/tests/

  ruff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: chartboost/ruff-action@v1

  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install pylint
      run: python3.10 -m pip install pylint
    - name: Install Weave and Dependencies
      run: |
        python3.10 -m pip install .
        python3.10 -m pip install pytest
    # If you do not install Weave's dependencies then it will fail PyLint due to import-errors
    - name: Run pylint
      run: pylint weave weave/tests

  version_check:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
      with: 
        ref: 'main'
    - name: Main Version
      run: echo "MAIN_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Merge Version
      run: echo "MERGE_VERSION=$(python setup.py --version)" >> $GITHUB_ENV
    - name: Version Comparison
      run: python .github/workflows/verify_version.py ${MAIN_VERSION} ${MERGE_VERSION}

